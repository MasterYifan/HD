{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  //   console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.payload]\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cannot remove product (id: ${action.id})`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/andrewchong/Desktop/Andrew/Programming/Web/Project/amazon-clone/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","payload","newBasket","index","findIndex","basketItem","id","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA9C,EAAsD,CAAtD,CAAnC;;AAEP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFR,OAAP;;AAIF,SAAK,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACE,OAAzB;AAFH,OAAP;;AAIF,SAAK,oBAAL;AACE,UAAIC,SAAS,GAAG,CAAC,GAAGJ,KAAK,CAACR,MAAV,CAAhB;AAEA,YAAMa,KAAK,GAAGL,KAAK,CAACR,MAAN,CAAac,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBP,MAAM,CAACO,EAAhE,CAAd;;AAEA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACdD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLK,QAAAA,OAAO,CAACC,IAAR,CAAc,8BAA6BV,MAAM,CAACO,EAAG,GAArD;AACD;;AACD,aAAO,EAAE,GAAGR,KAAL;AAAYR,QAAAA,MAAM,EAAEY;AAApB,OAAP;;AACF;AACE,aAAOJ,KAAP;AAvBJ;AAyBD;;AAED,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n};\n\nexport const getBasketTotal = (basket) => basket?.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  //   console.log(action);\n  switch (action.type) {\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      };\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.payload],\n      };\n    case \"REMOVE_FROM_BASKET\":\n      let newBasket = [...state.basket];\n\n      const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cannot remove product (id: ${action.id})`);\n      }\n      return { ...state, basket: newBasket };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}